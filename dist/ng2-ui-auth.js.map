{"version":3,"file":null,"sources":["../node_modules/rollup-plugin-typescript/src/typescript-helpers.js","../src/config.ts","../src/storage.ts","../src/shared.ts","../src/utils.ts","../src/local.ts","../src/popup.ts","../src/oauth1.ts","../src/oauth2.ts","../src/oauth.ts","../src/jwtHttp.ts","../src/auth.ts"],"sourcesContent":["export const __assign = Object.assign || function (target) {\n    for (var source, i = 1; i < arguments.length; i++) {\n        source = arguments[i];\n        for (var prop in source) {\n            if (Object.prototype.hasOwnProperty.call(source, prop)) {\n                target[prop] = source[prop];\n            }\n        }\n    }\n    return target;\n};\n\nexport function __extends(d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport function __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __metadata(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n}\n\nexport function __param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\nexport interface IPopupOptions {\n    width?: number;\n    height?: number;\n    left?: number;\n    top?: number;\n}\n\nexport interface IOauth1Options {\n    url?: string;\n    name?: string;\n    popupOptions?: IPopupOptions;\n    redirectUri?: string;\n    authorizationEndpoint?: string;\n    type?: string;\n}\n\nexport interface IOauth2Options extends IOauth1Options {\n    state?: string| (() => string);\n    defaultUrlParams?: string[];\n    responseType?: string;\n    responseParams?: {\n        code?: string;\n        clientId?: string;\n        redirectUri?: string;\n    };\n    clientId?: string;\n    scopeDelimiter?: string;\n    scopePrefix?: string;\n\n    requiredUrlParams?: string[];\n    optionalUrlParams?: string[];\n    scope?: string[];\n    display?: string;\n}\nexport interface IProviders {\n    [provider: string]: IOauth2Options;\n}\nexport interface ICustomConfig {\n    tokenRoot?: string;\n    cordova?: boolean;\n    baseUrl?: string;\n    loginUrl?: string;\n    signupUrl?: string;\n    unlinkUrl?: string;\n    tokenName?: string;\n    tokenSeparator?: string;\n    tokenPrefix?: string;\n    authToken?: string;\n    authHeader?: string;\n    storageType?: string;\n    providers?: IProviders;\n    defaultHeaders?: { [name: string]: string };\n    withCredentials?: boolean\n}\n@Injectable()\nexport class Config implements ICustomConfig {\n    constructor(config?: ICustomConfig) {\n        Object.keys(config).forEach((key) => {\n            if (key !== 'providers') {\n                this[key] = config[key];\n            } else {\n                Object.keys(config[key]).forEach((provider) => {\n                    if (typeof this.providers[provider] === 'undefined') {\n                        this.providers[provider] = config.providers[provider];\n                    } else {\n                        Object.keys(config.providers[provider]).forEach((prop) => {\n                            this.providers[provider][prop] = config.providers[provider][prop];\n                        });\n                    }\n                });\n            }\n        });\n    }\n    withCredentials = false;\n    tokenRoot = null;\n    cordova = false;\n    baseUrl = '/';\n    loginUrl = '/auth/login';\n    signupUrl = '/auth/signup';\n    unlinkUrl = '/auth/unlink/';\n    tokenName = 'token';\n    tokenSeparator = '_';\n    tokenPrefix = 'ng2-ui-auth';\n    authHeader = 'Authorization';\n    authToken = 'Bearer';\n    storageType = 'localStorage';\n    defaultHeaders = null;\n    providers: IProviders = {\n        facebook: {\n            name: 'facebook',\n            url: '/auth/facebook',\n            authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\n            redirectUri: window.location.origin + '/',\n            requiredUrlParams: ['display', 'scope'],\n            scope: ['email'],\n            scopeDelimiter: ',',\n            display: 'popup',\n            type: '2.0',\n            popupOptions: {width: 580, height: 400}\n        },\n        google: {\n            name: 'google',\n            url: '/auth/google',\n            authorizationEndpoint: 'https://accounts.google.com/o/oauth2/auth',\n            redirectUri: window.location.origin,\n            requiredUrlParams: ['scope'],\n            optionalUrlParams: ['display'],\n            scope: ['profile', 'email'],\n            scopePrefix: 'openid',\n            scopeDelimiter: ' ',\n            display: 'popup',\n            type: '2.0',\n            popupOptions: {width: 452, height: 633}\n        },\n        github: {\n            name: 'github',\n            url: '/auth/github',\n            authorizationEndpoint: 'https://github.com/login/oauth/authorize',\n            redirectUri: window.location.origin,\n            optionalUrlParams: ['scope'],\n            scope: ['user:email'],\n            scopeDelimiter: ' ',\n            type: '2.0',\n            popupOptions: {width: 1020, height: 618}\n        },\n        instagram: {\n            name: 'instagram',\n            url: '/auth/instagram',\n            authorizationEndpoint: 'https://api.instagram.com/oauth/authorize',\n            redirectUri: window.location.origin,\n            requiredUrlParams: ['scope'],\n            scope: ['basic'],\n            scopeDelimiter: '+',\n            type: '2.0'\n        },\n        linkedin: {\n            name: 'linkedin',\n            url: '/auth/linkedin',\n            authorizationEndpoint: 'https://www.linkedin.com/uas/oauth2/authorization',\n            redirectUri: window.location.origin,\n            requiredUrlParams: ['state'],\n            scope: ['r_emailaddress'],\n            scopeDelimiter: ' ',\n            state: 'STATE',\n            type: '2.0',\n            popupOptions: {width: 527, height: 582}\n        },\n        twitter: {\n            name: 'twitter',\n            url: '/auth/twitter',\n            authorizationEndpoint: 'https://api.twitter.com/oauth/authenticate',\n            redirectUri: window.location.origin,\n            type: '1.0',\n            popupOptions: {width: 495, height: 645}\n        },\n        twitch: {\n            name: 'twitch',\n            url: '/auth/twitch',\n            authorizationEndpoint: 'https://api.twitch.tv/kraken/oauth2/authorize',\n            redirectUri: window.location.origin,\n            requiredUrlParams: ['scope'],\n            scope: ['user_read'],\n            scopeDelimiter: ' ',\n            display: 'popup',\n            type: '2.0',\n            popupOptions: {width: 500, height: 560}\n        },\n        live: {\n            name: 'live',\n            url: '/auth/live',\n            authorizationEndpoint: 'https://login.live.com/oauth20_authorize.srf',\n            redirectUri: window.location.origin,\n            requiredUrlParams: ['display', 'scope'],\n            scope: ['wl.emails'],\n            scopeDelimiter: ' ',\n            display: 'popup',\n            type: '2.0',\n            popupOptions: {width: 500, height: 560}\n        },\n        yahoo: {\n            name: 'yahoo',\n            url: '/auth/yahoo',\n            authorizationEndpoint: 'https://api.login.yahoo.com/oauth2/request_auth',\n            redirectUri: window.location.origin,\n            scope: [],\n            scopeDelimiter: ',',\n            type: '2.0',\n            popupOptions: {width: 559, height: 519}\n        },\n        bitbucket: {\n            name: 'bitbucket',\n            url: '/auth/bitbucket',\n            authorizationEndpoint: 'https://bitbucket.org/site/oauth2/authorize',\n            redirectUri: window.location.origin + '/',\n            requiredUrlParams: ['scope'],\n            scope: ['email'],\n            scopeDelimiter: ',',\n            type: '2.0',\n            popupOptions: {width: 1028, height: 529}\n        }\n    };\n}\n","import {Injectable} from '@angular/core';\nimport {Config} from './config';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n@Injectable()\nexport class Storage {\n    private store = {};\n    private isStorageAvailable: boolean;\n    constructor(private config: Config) {\n        this.isStorageAvailable = (() => {\n            try {\n                let supported = config.storageType in window && window[config.storageType] !== null;\n\n                if (supported) {\n                    let key = Math.random().toString(36).substring(7);\n                    (<any>window[this.config.storageType]).setItem(key, '');\n                    (<any>window[this.config.storageType]).removeItem(key);\n                }\n\n                return supported;\n            } catch (e) {\n                return false;\n            }\n        })();\n        if (!this.isStorageAvailable) {\n            console.warn(config.storageType + ' is not available.');\n        }\n    }\n    get(key: string) {\n        return this.isStorageAvailable ? window[this.config.storageType].getItem(key) : this.store[key];\n    }\n    set(key: string, value: string) {\n        return this.isStorageAvailable ? window[this.config.storageType].setItem(key, value) : this.store[key] = value;\n    }\n    remove(key: string) {\n        return this.isStorageAvailable ? window[this.config.storageType].removeItem(key) : delete this.store[key];\n    }\n}\n","/**\n * Created by Ron on 17/12/2015.\n */\nimport {Observable} from 'rxjs/Observable';\nimport {Subscriber} from 'rxjs/Subscriber';\nimport {Injectable} from '@angular/core';\nimport {Response} from '@angular/http';\nimport {Config} from './config';\nimport {Storage} from './storage';\n/**\n * Created by Ron on 17/12/2015.\n */\n\n@Injectable()\nexport class Shared {\n    tokenName = this.config.tokenPrefix ? [this.config.tokenPrefix, this.config.tokenName].join(this.config.tokenSeparator) : this.config.tokenName;\n    constructor(private storage: Storage, private config: Config) {}\n    getToken() {\n        return this.storage.get(this.tokenName);\n    }\n    getPayload() {\n        let token = this.getToken();\n\n        if (token && token.split('.').length === 3) {\n            try {\n                let base64Url = token.split('.')[1];\n                let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n                return JSON.parse(decodeURIComponent(encodeURIComponent(window.atob(base64))));\n            } catch (e) {\n                return undefined;\n            }\n        }\n    }\n    setToken(response: string | Response) {\n        if (!response) {\n            console.warn('Can\\'t set token without passing a value');\n            return;\n        }\n\n        let token: string;\n        if (typeof response === 'string') {\n            token = response;\n        } else {\n            let accessToken = response && response.json() && (response.json().access_token || response.json().token);\n            let tokenObject: { data: any };\n\n            if (accessToken) {\n                if (typeof accessToken === 'object' && typeof accessToken.data === 'object') {\n                    tokenObject = accessToken;\n                } else if (typeof accessToken === 'string') {\n                    token = accessToken;\n                }\n            }\n\n            if (!token && tokenObject) {\n                let tokenRootData = this.config.tokenRoot &&\n                    this.config.tokenRoot.split('.').reduce(\n                        (o, x) => {\n                            return o[x];\n                        },\n                        tokenObject.data);\n                token = tokenRootData ? tokenRootData[this.config.tokenName] : tokenObject.data[this.config.tokenName];\n            }\n\n            if (!token) {\n                let tokenPath = this.config.tokenRoot ? this.config.tokenRoot + '.' + this.config.tokenName : this.config.tokenName;\n                console.warn('Expecting a token named \"' + tokenPath);\n                return;\n            }\n        }\n\n        this.storage.set(this.tokenName, token);\n    }\n    removeToken() {\n        this.storage.remove(this.tokenName);\n    }\n    isAuthenticated() {\n        let token = this.getToken();\n\n        // a token is present\n        if (token) {\n            // token with a valid JWT format XXX.YYY.ZZZ\n            if (token.split('.').length === 3) {\n                // could be a valid JWT or an access token with the same format\n                try {\n                    let base64Url = token.split('.')[1];\n                    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n                    let exp = JSON.parse(window.atob(base64)).exp;\n                    // jwt with an optional expiration claims\n                    if (exp) {\n                        let isExpired = Math.round(new Date().getTime() / 1000) >= exp;\n                        if (isExpired) {\n                            // fail: Expired token\n                            this.storage.remove(this.tokenName);\n                            return false;\n                        } else {\n                            // pass: Non-expired token\n                            return true;\n                        }\n                    }\n                } catch (e) {\n                    // pass: Non-JWT token that looks like JWT\n                    return true;\n                }\n            }\n            // pass: All other tokens\n            return true;\n        }\n        // lail: No token at all\n        return false;\n    }\n    getExpirationDate() {\n        let payload = this.getPayload();\n        if (payload.exp && Math.round(new Date().getTime() / 1000) < payload.exp) {\n            let date = new Date(0);\n            date.setUTCSeconds(payload.exp);\n            return date;\n        }\n        return null;\n    }\n    logout(): Observable<any> {\n        this.storage.remove(this.tokenName);\n        return Observable.create((observer: Subscriber<any>) => {\n            observer.next();\n            observer.complete();\n        });\n    }\n    setStorageType(type) {\n        this.config.storageType = type;\n    }\n}\n","/**\n * Created by Ron on 17/12/2015.\n */\n\nexport function assign(target: any, ...src: any[]): any {\n    if (target == null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n        if (source != null) {\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n    }\n    return target;\n}\n\nexport function joinUrl(baseUrl: string, url: string) {\n    if (/^(?:[a-z]+:)?\\/\\//i.test(url)) {\n        return url;\n    }\n\n    let joined = [baseUrl, url].join('/');\n\n    let normalize = function(str) {\n        return str\n            .replace(/[\\/]+/g, '/')\n            .replace(/\\/\\?/g, '?')\n            .replace(/\\/\\#/g, '#')\n            .replace(/\\:\\//g, '://');\n    };\n\n    return normalize(joined);\n}\n\nexport function merge(obj1, obj2) {\n    let result = {};\n    for (var i in obj1) {\n        if (obj1.hasOwnProperty(i)) {\n            if ((i in obj2) && (typeof obj1[i] === 'object') && (i !== null)) {\n                result[i] = merge(obj1[i], obj2[i]);\n            } else {\n                result[i] = obj1[i];\n            }\n        }\n    }\n    for (i in obj2) {\n        if (obj2.hasOwnProperty(i)) {\n            if (i in result) {\n                continue;\n            }\n            result[i] = obj2[i];\n        }\n\n    }\n    return result;\n}\n\nexport function camelCase(name) {\n    return name.replace(/([\\:\\-\\_]+(.))/g, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n    });\n}","import {Injectable} from '@angular/core';\nimport {Shared} from './shared';\nimport {Config} from './config';\nimport {Http, RequestOptionsArgs, Response} from '@angular/http';\nimport {joinUrl} from './utils';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\nfunction getFullOpts(user: string | Object, userOpts?: RequestOptionsArgs) {\n    const opts = userOpts || {};\n    if (user) {\n        opts.body = typeof user === 'string' ? user : JSON.stringify(user);\n    }\n    opts.method = opts.method || 'POST';\n    return opts;\n}\n\n@Injectable()\nexport class Local {\n    constructor(private http: Http,\n                private shared: Shared,\n                private config: Config) {}\n\n    login(user: string | Object, opts?: RequestOptionsArgs): Observable<Response> {\n        const fullOpts = getFullOpts(user, opts);\n        const url = fullOpts.url ? fullOpts.url : joinUrl(this.config.baseUrl, this.config.loginUrl);\n\n        return this.http.request(url, fullOpts)\n            .do((response: Response) => this.shared.setToken(response));\n    }\n\n    signup(user: string | Object, opts?: RequestOptionsArgs): Observable<Response> {\n        const fullOpts = getFullOpts(user, opts);\n        const url = fullOpts.url ? fullOpts.url : joinUrl(this.config.baseUrl, this.config.signupUrl);\n\n        return this.http.request(url, getFullOpts(user, fullOpts));\n    }\n}","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {assign} from './utils';\nimport {Config, IPopupOptions, IProviders} from './config';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/operator/concatMap';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/takeWhile';\n\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\n@Injectable()\nexport class Popup {\n    url = '';\n    popupWindow: Window = null;\n\n    private static prepareOptions(options: IPopupOptions) {\n        options = options || {};\n        let width = options.width || 500;\n        let height = options.height || 500;\n        return assign(\n            {\n                width: width,\n                height: height,\n                left: window.screenX + ((window.outerWidth - width) / 2),\n                top: window.screenY + ((window.outerHeight - height) / 2.5)\n            },\n            options);\n    }\n\n    private static stringifyOptions(options: Object) {\n        return Object.keys(options).map((key) => {\n            return key + '=' + options[key];\n        }).join(',');\n    }\n\n    private static parseQueryString(joinedKeyValue: string): any {\n        let key, value;\n        return joinedKeyValue.split('&').reduce(\n            (obj, keyValue) => {\n                if (keyValue) {\n                    value = keyValue.split('=');\n                    key = decodeURIComponent(value[0]);\n                    obj[key] = typeof value[1] !== 'undefined' ? decodeURIComponent(value[1]) : true;\n                }\n                return obj;\n            },\n            {});\n    }\n\n\n    constructor(private config: Config) {}\n    open(url: string, name: string, options: IPopupOptions) {\n        this.url = url;\n\n        let stringifiedOptions = Popup.stringifyOptions(Popup.prepareOptions(options));\n        let UA = window.navigator.userAgent;\n        let windowName = (this.config.cordova || UA.indexOf('CriOS') > -1) ? '_blank' : name;\n\n        this.popupWindow = window.open(url, windowName, stringifiedOptions);\n\n        window['popup'] = this.popupWindow;\n\n        if (this.popupWindow && this.popupWindow.focus) {\n            this.popupWindow.focus();\n        }\n\n        return this;\n    }\n\n    eventListener(redirectUri: string) {\n        return Observable\n            .fromEvent(this.popupWindow, 'loadstart')\n            .concatMap((event: Event & { url: string }) => {\n                if (!this.popupWindow || this.popupWindow.closed) {\n                    return ['Popup Window Closed'];\n                }\n                if (event.url.indexOf(redirectUri) !== 0) {\n                    return [];\n                }\n\n                let parser = document.createElement('a');\n                parser.href = event.url;\n\n                if (parser.search || parser.hash) {\n                    const queryParams = parser.search.substring(1).replace(/\\/$/, '');\n                    const hashParams = parser.hash.substring(1).replace(/\\/$/, '');\n                    const hash = Popup.parseQueryString(hashParams);\n                    const qs = Popup.parseQueryString(queryParams);\n                    const allParams = assign({}, qs, hash);\n\n                    this.popupWindow.close();\n\n                    if (allParams.error) {\n                        throw allParams.error;\n                    } else {\n                        return <any>[allParams];\n                    }\n                }\n                return [];\n            })\n            .take(1)\n            .takeWhile((response) => response !== 'Popup Window Closed');\n    }\n\n    pollPopup() {\n        var redirectUris = [];\n        for(let provider in this.config.providers)\n        {\n             redirectUris.push(this.config.providers[provider].redirectUri);\n        }\n        return Observable\n            .interval(50)\n            .concatMap(() => {\n                if (!this.popupWindow || this.popupWindow.closed) {\n                    return ['Popup Window Closed'];\n                }\n                let documentOrigin = document.location.host;\n                let popupWindowOrigin = '';\n                let popupWindowURL = '';\n                try {\n                    popupWindowOrigin = this.popupWindow.location.host;\n                    popupWindowURL = this.popupWindow.location.protocol + \"//\" + this.popupWindow.location.host + this.popupWindow.location.pathname;\n                } catch (error) {\n                    // ignore DOMException: Blocked a frame with origin from accessing a cross-origin frame.\n                    //error instanceof DOMException && error.name === 'SecurityError'\n                }\n                \n                \n\n                if (popupWindowOrigin === documentOrigin && (this.popupWindow.location.search || this.popupWindow.location.hash) && (redirectUris.indexOf(popupWindowURL) > -1)) {\n                    const queryParams = this.popupWindow.location.search.substring(1).replace(/\\/$/, '');\n                    const hashParams = this.popupWindow.location.hash.substring(1).replace(/[\\/$]/, '');\n                    const hash = Popup.parseQueryString(hashParams);\n                    const qs = Popup.parseQueryString(queryParams);\n                    this.popupWindow.close();\n                    const allParams = assign({}, qs, hash);\n                    if (allParams.error) {\n                        throw allParams.error;\n                    } else {\n                        return [allParams];\n                    }\n                }\n                return [];\n            })\n            .take(1)\n            .takeWhile((response) => response !== 'Popup Window Closed');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Popup} from './popup';\nimport {Http, Response} from '@angular/http';\nimport {joinUrl, assign} from './utils';\nimport {Config, IOauth1Options} from './config';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/concatMap';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\n\n@Injectable()\nexport class Oauth1 {\n    private static base: IOauth1Options = {\n        url: null,\n        name: null,\n        popupOptions: null,\n        redirectUri: null,\n        authorizationEndpoint: null\n    };\n    private defaults: IOauth1Options;\n    constructor(private http: Http, private popup: Popup, private config: Config) {}\n    open(options?: IOauth1Options, userData?: any): Observable<Response> {\n        this.defaults = assign({}, Oauth1.base, options);\n        let popupWindow;\n        let serverUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\n\n        if (!this.config.cordova) {\n            popupWindow = this.popup.open('', this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/);\n        }\n\n        return this.http.post(serverUrl, JSON.stringify(this.defaults))\n            .concatMap((response: Response) => {\n                if (this.config.cordova) {\n                    popupWindow = this.popup.open(\n                        [this.defaults.authorizationEndpoint, this.buildQueryString(response.json())].join('?'),\n                        this.defaults.name,\n                        this.defaults.popupOptions);\n                } else {\n                    popupWindow.popupWindow.location =\n                        [this.defaults.authorizationEndpoint, this.buildQueryString(response.json())].join('?');\n                }\n\n                return this.config.cordova ? popupWindow.eventListener(this.defaults.redirectUri) : popupWindow.pollPopup();\n            })\n            .concatMap((response) => {\n                return this.exchangeForToken(response, userData);\n            });\n    }\n    private exchangeForToken(oauthData, userData?: any) {\n        let data = assign({}, oauthData, userData);\n        let exchangeForTokenUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\n        return this.http.post(exchangeForTokenUrl, data, { withCredentials: this.config.withCredentials });\n    }\n    private buildQueryString(obj: Object) {\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport {assign, joinUrl, merge, camelCase} from './utils';\nimport {Config, IOauth2Options} from './config';\nimport {Popup} from './popup';\nimport {Storage} from './storage';\nimport 'rxjs/add/operator/concatMap';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\n\n@Injectable()\nexport class Oauth2 {\n    private static base: IOauth2Options = {\n        defaultUrlParams: ['response_type', 'client_id', 'redirect_uri'],\n        responseType: 'code',\n        responseParams: {\n            code: 'code',\n            clientId: 'clientId',\n            redirectUri: 'redirectUri'\n        }\n    };\n\n    private defaults: IOauth2Options;\n\n    constructor(private http: Http,\n                private popup: Popup,\n                private storage: Storage,\n                private config: Config) {\n    }\n\n    open(options: IOauth2Options, userData?: any) {\n        this.defaults = merge(options, Oauth2.base);\n\n        let url;\n        let openPopup: Observable<any>;\n        let stateName = this.defaults.name + '_state';\n        let state = this.defaults.state;\n        if (typeof state === 'string') {\n            this.storage.set(stateName, state);\n        } else if (typeof state === 'function') {\n            this.storage.set(stateName, state());\n        }\n\n        url = [this.defaults.authorizationEndpoint, this.buildQueryString()].join('?');\n\n        if (this.config.cordova) {\n            openPopup = this.popup\n                .open(url, this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/)\n                .eventListener(this.defaults.redirectUri);\n        } else {\n            openPopup = this.popup\n                .open(url, this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/)\n                .pollPopup();\n        }\n\n        return openPopup\n            .concatMap((oauthData) => {\n                // when no server URL provided, return popup params as-is.\n                // this is for a scenario when someone wishes to opt out from\n                // satellizer's magic by doing authorization code exchange and\n                // saving a token manually.\n                if (this.defaults.responseType === 'token' || !this.defaults.url) {\n                    return oauthData;\n                }\n\n                if (oauthData.state && oauthData.state !== this.storage.get(stateName)) {\n                    throw 'OAuth \"state\" mismatch';\n                }\n\n                return this.exchangeForToken(oauthData, userData);\n            });\n    }\n\n    private exchangeForToken(oauthData: {code?, state?}, userData?: {}) {\n        let data: any = assign({}, this.defaults, oauthData, userData);\n\n        let exchangeForTokenUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\n\n        return this.http.post(exchangeForTokenUrl,  JSON.stringify(data), { withCredentials: this.config.withCredentials });\n    }\n\n    private buildQueryString() {\n        let keyValuePairs: string[][] = [];\n        let urlParams = ['defaultUrlParams', 'requiredUrlParams', 'optionalUrlParams'];\n\n        urlParams.forEach((params) => {\n            if (this.defaults[params]) {\n                (<string[]>this.defaults[params]).forEach((paramName) => {\n                    let camelizedName = camelCase(paramName);\n                    let paramValue = typeof this.defaults[paramName] === 'function' ?\n                        this.defaults[paramName]() :\n                        this.defaults[camelizedName];\n\n                    if (paramName === 'state') {\n                        let stateName = this.defaults.name + '_state';\n                        paramValue = encodeURIComponent(this.storage.get(stateName));\n                    }\n\n                    if (paramName === 'scope' && Array.isArray(paramValue)) {\n                        paramValue = paramValue.join(this.defaults.scopeDelimiter);\n\n                        if (this.defaults.scopePrefix) {\n                            paramValue = [this.defaults.scopePrefix, paramValue].join(this.defaults.scopeDelimiter);\n                        }\n                    }\n\n                    keyValuePairs.push([paramName, paramValue]);\n                });\n            }\n        });\n\n        return keyValuePairs.map(function(pair) {\n            return pair.join('=');\n        }).join('&');\n    }\n}\n","import {Injectable, Injector} from '@angular/core';\nimport {Oauth1} from './oauth1';\nimport {Oauth2} from './oauth2';\nimport {Shared} from './shared';\nimport {Http, Response, RequestOptionsArgs} from '@angular/http';\nimport {joinUrl} from './utils';\nimport {Config} from './config';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\n@Injectable()\nexport class Oauth {\n    constructor(private http: Http,\n                private injector: Injector,\n                private shared: Shared,\n                private config: Config) {}\n    authenticate(name: string, userData?: any): Observable<Response> {\n        // var injector = Injector.resolveAndCreate([Oauth1, Oauth2]);\n        let provider: Oauth1 | Oauth2 = this.config.providers[name].type === '1.0' ? this.injector.get(Oauth1) : this.injector.get(Oauth2);\n        return provider.open(this.config.providers[name], userData || {})\n            .do((response: Response) => {\n                // this is for a scenario when someone wishes to opt out from\n                // satellizer's magic by doing authorization code exchange and\n                // saving a token manually.\n                if (this.config.providers[name].url) {\n                    this.shared.setToken(response);\n                }\n            });\n    }\n    unlink(provider: string, opts: RequestOptionsArgs) {\n        opts = opts || {};\n        let url = opts.url ? opts.url : joinUrl(this.config.baseUrl, this.config.unlinkUrl);\n        opts.body = JSON.stringify({ provider: provider }) || opts.body;\n        opts.method = opts.method || 'POST';\n        \n        return this.http.request(url, opts);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {\n    Http,\n    RequestMethod,\n    Response,\n    RequestOptionsArgs,\n    Headers,\n    Request,\n    RequestOptions,\n    ConnectionBackend\n} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport {Config} from './config';\nimport {Shared} from './shared';\n/**\n * Created by Ron on 06/01/2016.\n */\n\n@Injectable()\nexport class JwtHttp extends Http {\n    constructor(_backend: ConnectionBackend,\n                _defaultOptions: RequestOptions,\n                private _shared: Shared,\n                private _config: Config) {\n        super(_backend, _defaultOptions);\n    }\n\n    request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\n        if (url instanceof Request) {\n            url.headers = url.headers || new Headers();\n            this.setHeaders(url);\n        } else {\n            options = options || {};\n            this.setHeaders(options);\n        }\n        return super.request(url, options);\n    }\n\n    get(url: string, options?: RequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Get;\n        return this.request(url, options);\n    }\n\n    post(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Post;\n        options.body = body;\n        return this.request(url, options);\n    }\n\n    put(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Put;\n        options.body = body;\n        return this.request(url, options);\n    }\n\n    delete(url: string, options?: RequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Delete;\n        return this.request(url, options);\n    }\n\n    patch(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Patch;\n        options.body = body;\n        return this.request(url, options);\n    }\n\n    head(url: string, options?: RequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Head;\n        return this.request(url, options);\n    }\n\n    private setHeaders(obj: { headers?: Headers, [index: string]: any }) {\n        obj.headers = obj.headers || new Headers();\n        if (this._config.defaultHeaders) {\n            Object.keys(this._config.defaultHeaders).forEach((defaultHeader) => {\n                if (!obj.headers.has(defaultHeader)) {\n                    obj.headers.set(defaultHeader, this._config.defaultHeaders[defaultHeader]);\n                }\n            });\n        }\n        if (this._shared.isAuthenticated()) {\n            obj.headers.set(this._config.authHeader, this._config.authToken + ' ' + this._shared.getToken());\n        }\n    }\n}\n","import {Injectable, Injector} from '@angular/core';\nimport {Response, RequestOptionsArgs, XHRBackend, RequestOptions} from '@angular/http';\nimport {Shared} from './shared';\nimport {Local} from './local';\nimport {Oauth} from './oauth';\nimport {Popup} from './popup';\nimport {Oauth2} from './oauth2';\nimport {Oauth1} from './oauth1';\nimport {Storage} from './storage';\nimport {ICustomConfig, Config} from './config';\nimport {Observable} from 'rxjs/Observable';\nimport {JwtHttp} from './jwtHttp';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\nexport function NG2_UI_AUTH_PROVIDERS(config: ICustomConfig): Array<any> {\n    return [{provide: Config, useFactory: () => { return new Config(config);}},\n            {provide: Storage, useFactory: (providedConfig) => { return new Storage(providedConfig);}, deps: [Config]},\n            {provide: Shared,  useFactory: (storage, providedConfig) => { return new Shared(storage, providedConfig);}, deps: [Storage, Config]},\n            {provide: JwtHttp, useFactory: (xhrBackend, requestOptions, shared, config, router) => new JwtHttp(xhrBackend, requestOptions, shared, config), deps: [XHRBackend, RequestOptions, Shared, Config]},\n            {provide: Oauth,  useFactory: (http, injector, shared, providedConfig) => { return new Oauth(http, injector, shared, providedConfig);}, deps: [JwtHttp, Injector, Shared, Config]} ,\n            {provide: Popup,  useFactory: (providedConfig) => { return new Popup(providedConfig);}, deps: [Config]},\n            {provide: Oauth1,  useFactory: (http, popup, providedConfig) => { return new Oauth1(http, popup, providedConfig);}, deps: [JwtHttp, Popup, Config]} ,\n            {provide: Oauth2,  useFactory: (http, popup, storage, providedConfig) => { return new Oauth2(http, popup, storage, providedConfig);}, deps: [JwtHttp, Popup, Storage, Config]} ,\n            {provide: Local,  useFactory: (http, shared, providedConfig) => { return new Local(http, shared, providedConfig);}, deps: [JwtHttp, Shared, Config]} ,\n            {provide: Auth,  useFactory: (shared, local, oauth) => { return new Auth(shared, local, oauth);}, deps: [Shared, Local, Oauth]} ,\n        ];\n}\n\n@Injectable()\nexport class Auth {\n    constructor(private shared: Shared,\n                private local: Local,\n                private oauth: Oauth) {}\n    login(user, opts?: RequestOptionsArgs): Observable<Response> {\n        return this.local.login(user, opts);\n    }\n    signup(user, opts?: RequestOptionsArgs): Observable<Response>  {\n        return this.local.signup(user, opts);\n    }\n    logout(): Observable<void> {\n        return this.shared.logout();\n    }\n    authenticate(name: string, userData?: any): Observable<Response> {\n        return this.oauth.authenticate(name, userData);\n    }\n    link(name: string, userData?: any): Observable<Response> {\n        return this.oauth.authenticate(name, userData);\n    }\n    unlink(provider: string, opts: RequestOptionsArgs): Observable<Response> {\n        return this.oauth.unlink(provider, opts);\n    }\n    isAuthenticated(): boolean {\n        return this.shared.isAuthenticated();\n    }\n    getToken(): string {\n        return this.shared.getToken();\n    }\n    setToken(token: string): void {\n        this.shared.setToken(token);\n    }\n    removeToken(): void {\n        this.shared.removeToken();\n    }\n    getPayload(): any {\n        return this.shared.getPayload();\n    }\n    setStorageType(type: string): void {\n        this.shared.setStorageType(type);\n    }\n    getExpirationDate(): Date {\n        return this.shared.getExpirationDate();\n    }\n}\n"],"names":["Injectable","Observable","Request","Headers","RequestMethod","Http","XHRBackend","RequestOptions","Injector"],"mappings":"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"}